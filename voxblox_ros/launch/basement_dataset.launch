<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!--
  <arg name="play_bag" default="true" />
  <arg name="bag_file" default="/home/son/Documents/bag/basement_dataset.bag"/>

  <! Download the dataset here: https://projects.asl.ethz.ch/datasets/doku.php?id=basement2018 

  <node name="player" pkg="rosbag" type="play" output="screen" args="-r 1.0 clock $(arg bag_file)" if="$(arg play_bag)"/>
-->

<arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" default="false"/>
  <arg name="world_name" default="$(find velodyne_description)/world/example.world"/>

  <!-- Start gazebo and load the world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" >
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="verbose" value="$(arg verbose)"/>
    <arg name="world_name" value="$(arg world_name)"/>
  </include>

  <!-- Spawn the example robot -->
  <arg name="gpu" default="false"/>
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find velodyne_description)/urdf/example.urdf.xacro' gpu:=$(arg gpu)" />
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_model" args="-urdf -param /robot_description -model example"/>
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <!-- RViz -->
  <arg name="rviz" default="true"/>
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="$(anon rviz)" respawn="false" output="screen" args="-d $(find velodyne_description)/rviz/example.rviz" />
  
  <node name="voxblox_node" pkg="voxblox_ros" type="esdf_server" output="screen" clear_params="true">
    <remap from="pointcloud" to="/velodyne_points2"/> <!-- pointcloud -> /velodyne_points change -->
    <param name="tsdf_voxel_size" value="0.05" />
    <param name="truncation_distance" value="0.5" />
    <param name="color_mode" value="normals" />
    <param name="enable_icp" value="true" />
    <param name="icp_refine_roll_pitch" value="false" />
    <param name="update_mesh_every_n_sec" value="1.0" />
    <param name="mesh_min_weight" value="2" />
    <param name="method" value="fast" />
    <param name="max_ray_length_m" value="10.0" />
    <param name="use_const_weight" value="true" />
    <param name="world_frame" value="world"/>
    <param name="verbose" value="true" />
    <param name="mesh_filename" value="$(find voxblox_ros)/mesh_results/$(anon basement).ply" />
  </node>

</launch>
